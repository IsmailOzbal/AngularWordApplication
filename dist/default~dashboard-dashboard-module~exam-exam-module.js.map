{"version":3,"sources":["webpack:///./src/app/layout/exam/exam.component.html","webpack:///./src/app/layout/exam/exam.component.scss","webpack:///./src/app/layout/exam/exam.component.ts","webpack:///./src/app/shared/Model/Exam.ts","webpack:///./src/app/shared/modules/question/question.component.html","webpack:///./src/app/shared/modules/question/question.component.scss","webpack:///./src/app/shared/modules/question/question.component.ts","webpack:///./src/app/shared/modules/question/question.module.ts","webpack:///./src/app/shared/services/insert-score.service.ts","webpack:///./src/app/shared/services/questions.service.ts"],"names":[],"mappings":";;;;;;;;;AAAA,wTAAwT,gBAAgB,sBAAsB,cAAc,4BAA4B,oBAAoB,4BAA4B,oBAAoB,8BAA8B,sBAAsB,6BAA6B,qBAAqB,+UAA+U,SAAS,mD;;;;;;;;;;;ACA14B,+DAA+D,mJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACnB;AAC8C;AAE7B;AACP;AACE;AACM;AACiC;AAMlF;IAaE,uBACU,eAAiC,EACjC,OAA0B,EAC1B,MAAc,EACd,MAAqB,EACrB,WAA+B;QAJ/B,oBAAe,GAAf,eAAe,CAAkB;QACjC,YAAO,GAAP,OAAO,CAAmB;QAC1B,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QACrB,gBAAW,GAAX,WAAW,CAAoB;QAjBzC,WAAM,GAAa,EAAE,CAAC;QAEtB,iBAAY,GAAgB,EAAE,CAAC;QAC/B,cAAS,GAAG,EAAE,CAAC;QAGf,WAAM,GAAG,IAAI,CAAC;QACd,WAAM,GAAG,KAAK,CAAC;QACf,YAAO,GAAG,EAAE,CAAC;QACb,QAAG,GAAG,CAAC,CAAC;QAER,SAAI,GAAS,IAAI,8DAAI,EAAE,CAAC;QAQtB,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC;QAClC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,CAAC;IAED,gCAAQ,GAAR;QACE,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,+BAAO,GAAP;QAAA,iBAQC;QAPC,IAAI,CAAC,eAAe;aACjB,gBAAgB,EAAE;aAClB,SAAS,EAAE;aACX,IAAI,CAAC,aAAG;YACP,KAAI,CAAC,YAAY,GAAG,GAAG,CAAC;YACxB,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,8BAAM,GAAN;QACE,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,MAAM,GAAQ,EAAE,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;IAChB,CAAC;IAED,4BAAI,GAAJ;QAAA,iBA0CC;QAzCC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;QACb,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,KAAkB,UAAiB,EAAjB,SAAI,CAAC,YAAY,EAAjB,cAAiB,EAAjB,IAAiB,EAAE;YAAhC,IAAM,GAAG;YACZ,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,SAAS,EAAE;gBACvC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACpB,MAAM;aACP;YACD,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;QACD,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,2BAA2B,EAAE,oBAAoB,CAAC,CAAC;SACxE;aAAM;YACL,KAAkB,UAAiB,EAAjB,SAAI,CAAC,YAAY,EAAjB,cAAiB,EAAjB,IAAiB,EAAE;gBAAhC,IAAM,GAAG;gBACZ,IAAI,GAAG,CAAC,aAAa,KAAK,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;oBAChD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;iBACtC;qBAAM;oBACL,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,cAAc,GAAG,GAAG,CAAC,aAAa,GAAG,OAAO,CAAC;iBAC9F;gBACD,IAAI,CAAC,IAAI,EAAE,CAAC;aACb;YAED,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YAC7B,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YAEnD,IAAI,CAAC,WAAW;iBACb,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC;iBACtB,SAAS,EAAE;iBACX,IAAI,CAAC,aAAG;gBACP,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACpB,kDAAI,CAAC;oBACH,QAAQ,EAAE,SAAS;oBACnB,IAAI,EAAE,SAAS;oBACf,IAAI,EAAE,wBAAwB,GAAG,KAAI,CAAC,KAAK,GAAG,aAAa,GAAG,OAAO,GAAG,KAAI,CAAC,OAAO;oBACpF,iBAAiB,EAAE,IAAI;iBACxB,CAAC,CAAC;gBACH,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACrB,CAAC,CAAC,CAAC;SACN;IACH,CAAC;IA7FU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,uGAAoC;;SAErC,CAAC;yCAe2B,0FAAgB;YACxB,6DAAiB;YAClB,sDAAM;YACN,wDAAa;YACR,+FAAkB;OAlB9B,aAAa,CA8FzB;IAAD,oBAAC;CAAA;AA9FyB;;;;;;;;;;;;;ACd1B;AAAA;AAAA;AAAA;IAAA;IAGA,CAAC;IAAD,WAAC;AAAD,CAAC;;AAED;IAAA;IAKA,CAAC;IAAD,eAAC;AAAD,CAAC;;;;;;;;;;;;;ACVD,6FAA6F,SAAS,uCAAuC,2BAA2B,OAAO,WAAW,4OAA4O,aAAa,wIAAwI,aAAa,yJAAyJ,eAAe,kKAAkK,cAAc,gI;;;;;;;;;;;ACAh6B,wCAAwC,yBAAyB,2BAA2B,EAAE,2BAA2B,gBAAgB,EAAE,6BAA6B,mBAAmB,EAAE,oBAAoB,mDAAmD,EAAE,+CAA+C,+4B;;;;;;;;;;;;;;;;;;;;;;;;;ACA5P;AACU;AAQnE;IAOE,2BAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;IAEhD,CAAC;IAED,oCAAQ,GAAR,cAAY,CAAC;IAEb,kCAAM,GAAN,UAAO,IAAY;QAChB,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;IACpD,CAAC;IAED,gCAAI,GAAJ,cAAc,CAAC;IAhBN;QAAR,2DAAK,EAAE;;oDAAe;IACd;QAAR,2DAAK,EAAE;;kDAAa;IACZ;QAAR,2DAAK,EAAE;;wDAAmB;IAClB;QAAR,2DAAK,EAAE;;wDAAmB;IAClB;QAAR,2DAAK,EAAE;;0DAAqB;IACpB;QAAR,2DAAK,EAAE;;yDAAoB;IANjB,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,2HAAwC;;SAEzC,CAAC;yCAQmC,gFAAa;OAPrC,iBAAiB,CAkB7B;IAAD,wBAAC;CAAA;AAlB6B;;;;;;;;;;;;;;;;;;;;;;;;;ACTW;AACM;AACU;AACQ;AACI;AAOrE;IAAA;IAA6B,CAAC;IAAjB,cAAc;QAL1B,8DAAQ,CAAC;YACN,OAAO,EAAE,CAAC,4DAAY,EAAE,+DAAa,EAAE,mEAAiB,EAAE,+DAAa,EAAC,gEAAc,CAAC;YACvF,YAAY,EAAE,CAAC,qEAAiB,CAAC;YACjC,OAAO,EAAE,CAAC,qEAAiB,CAAC;SAC/B,CAAC;OACW,cAAc,CAAG;IAAD,qBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXgB;AACoB;AACT;AAChB;AAGG;AAEE;AAK3C;IAUE,4BAAoB,IAAgB,EAAU,MAAqB;QAA/C,SAAI,GAAJ,IAAI,CAAY;QAAU,WAAM,GAAN,MAAM,CAAe;QARnE,WAAM,GAAG;YACP,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;gBAClC,eAAe,EAAE,SAAS,GAAI,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC;aAC5D,CAAC;SACH,CAAC;IAGqE,CAAC;IAExE,wCAAW,GAAX,UAAY,IAAU;QAGpB,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CAAO,oDAAM,CAAC,OAAO,GAAG,cAAc,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC;aAC9D,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAO,aAAa,CAAC,CAAC,CAAC,CAAC;IAG7D,CAAC;IAEO,gCAAG,GAAX,UAAY,OAAe;QACzB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;IAEvC,CAAC;IAEO,wCAAW,GAAnB,UAAuB,SAAuB,EAAE,MAAU;QAA1D,iBAMC;QANsB,mDAAuB;QAC5C,OAAO,UAAC,KAAU;YAChB,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,yBAAyB;YAC/C,KAAI,CAAC,GAAG,CAAC,KAAG,KAAK,CAAC,UAAY,CAAC,CAAC;YAChC,OAAO,+CAAE,CAAC,MAAW,CAAC,CAAC;QACzB,CAAC,CAAC;IACJ,CAAC;IAjCU,kBAAkB;QAH9B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAW0B,+DAAU,EAAkB,wDAAa;OAVxD,kBAAkB,CAoC9B;IAAD,yBAAC;CAAA;AApC8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbY;AACoB;AACT;AAChB;AAGG;AAEE;AAK3C;IASE,0BAAoB,IAAgB,EAAU,MAAqB;QAA/C,SAAI,GAAJ,IAAI,CAAY;QAAU,WAAM,GAAN,MAAM,CAAe;QAPnE,WAAM,GAAG;YACP,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;gBAClC,eAAe,EAAE,SAAS,GAAI,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC;aAC5D,CAAC;SACH,CAAC;IAEqE,CAAC;IAExE,2CAAgB,GAAhB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,oDAAM,CAAC,OAAO,GAAG,uBAAuB,EAAE,IAAI,CAAC,MAAM,CAAC;YACxF,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC;IAEO,8BAAG,GAAX,UAAY,OAAe;QACzB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,yDAAyD,CAAC,CAAC;IAE/E,CAAC;IAEO,sCAAW,GAAnB,UAAuB,SAAuB,EAAE,MAAU;QAA1D,iBAMC;QANsB,mDAAuB;QAC5C,OAAO,UAAC,KAAU;YAChB,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,yBAAyB;YAC/C,KAAI,CAAC,GAAG,CAAC,KAAG,KAAK,CAAC,UAAY,CAAC,CAAC;YAChC,OAAO,+CAAE,CAAC,MAAW,CAAC,CAAC;QACzB,CAAC,CAAC;IACJ,CAAC;IA3BU,gBAAgB;QAH5B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAU0B,+DAAU,EAAkB,wDAAa;OATxD,gBAAgB,CA6B5B;IAAD,uBAAC;CAAA;AA7B4B","file":"default~dashboard-dashboard-module~exam-exam-module.js","sourcesContent":["module.exports = \"<ngx-spinner></ngx-spinner>\\r\\n<div class=\\\"mb-20\\\" fxLayout=\\\"row\\\" *ngIf=\\\"questionList.length != 0\\\" fxLayout.lt-md=\\\"row\\\" fxFlex>\\r\\n  <div fxFlex>\\r\\n    <h4>WORDLIST EXAM</h4>\\r\\n    <hr />\\r\\n    <div *ngFor=\\\"let question of questionList\\\">\\r\\n      <app-question\\r\\n        count=\\\"{{question.count}}\\\"\\r\\n        tag=\\\"{{question.tag}}\\\"\\r\\n        answerone=\\\"{{question.answerone}}\\\"\\r\\n        answertwo=\\\"{{question.answertwo}}\\\"\\r\\n        answerthree=\\\"{{question.answerthree}}\\\"\\r\\n        answerfour=\\\"{{question.answerfour}}\\\"\\r\\n      ></app-question>\\r\\n    </div>\\r\\n    <button *ngIf=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"Save()\\\">Complete</button>\\r\\n\\r\\n    <button *ngIf=\\\"reload\\\" mat-raised-button color=\\\"warn\\\" (click)=\\\"Reload()\\\">Load Exam</button>\\r\\n    <hr />\\r\\n    <b>\\r\\n      Good luck!\\r\\n      <h6>Each question has {{ point }} points</h6>\\r\\n    </b>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9leGFtL2V4YW0uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport swal from 'sweetalert2';\r\nimport { QuestionsService } from 'src/app/shared/services/questions.service';\r\nimport { Questions } from 'src/app/shared/Model/Questions';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Exam } from 'src/app/shared/Model/Exam';\r\nimport { InsertScoreService } from 'src/app/shared/services/insert-score.service';\r\n@Component({\r\n  selector: 'app-exam',\r\n  templateUrl: './exam.component.html',\r\n  styleUrls: ['./exam.component.scss']\r\n})\r\nexport class ExamComponent implements OnInit {\r\n  values: string[] = [];\r\n  point: number;\r\n  questionList: Questions[] = [];\r\n  _tagcount = 10;\r\n  sayi: number;\r\n  score: number;\r\n  submit = true;\r\n  reload = false;\r\n  failure = '';\r\n  que = 0;\r\n  control: boolean;\r\n  exam: Exam = new Exam();\r\n  constructor(\r\n    private questionservice: QuestionsService,\r\n    private spinner: NgxSpinnerService,\r\n    private router: Router,\r\n    private toastr: ToastrService,\r\n    private insertScore: InsertScoreService\r\n  ) {\r\n    this.point = 100 / this._tagcount;\r\n    this.sayi = 0;\r\n    this.score = 0;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.spinner.show();\r\n    this.getList();\r\n  }\r\n\r\n  getList() {\r\n    this.questionservice\r\n      .getQuestionsList()\r\n      .toPromise()\r\n      .then(res => {\r\n        this.questionList = res;\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  Reload(): void {\r\n    this.spinner.show();\r\n    this.getList();\r\n    this.submit = true;\r\n    this.reload = false;\r\n    this.score = 0;\r\n    this.failure = '';\r\n    this.values = [] = [];\r\n    this.sayi = 0;\r\n  }\r\n\r\n  Save(): void {\r\n    this.spinner.show();\r\n    this.que = 0;\r\n    this.control = true;\r\n    for (const que of this.questionList) {\r\n      if (this.values[this.que] === undefined) {\r\n        this.control = false;\r\n        this.spinner.hide();\r\n        break;\r\n      }\r\n      this.que++;\r\n    }\r\n    if (!this.control) {\r\n      this.toastr.warning('All question must be fill', 'Qeustions warning!');\r\n    } else {\r\n      for (const que of this.questionList) {\r\n        if (que.correctanswer === this.values[this.sayi]) {\r\n          this.score = this.score + this.point;\r\n        } else {\r\n          this.failure = this.failure + (this.sayi + 1) + ' answer  is ' + que.correctanswer + '<br/>';\r\n        }\r\n        this.sayi++;\r\n      }\r\n\r\n      this.exam.score = this.score;\r\n      this.exam.userId = +localStorage.getItem('userid');\r\n\r\n      this.insertScore\r\n        .InsertScore(this.exam)\r\n        .toPromise()\r\n        .then(res => {\r\n          this.spinner.hide();\r\n          swal({\r\n            position: 'top-end',\r\n            type: 'success',\r\n            html: 'The exam result is <b>' + this.score + '</b> points' + '<br/>' + this.failure,\r\n            showConfirmButton: true\r\n          });\r\n          this.submit = false;\r\n          this.reload = true;\r\n        });\r\n    }\r\n  }\r\n}\r\n","export class Exam {\r\n  public userId: number;\r\n  public score: number;\r\n}\r\n\r\nexport class ExamView {\r\n  public userName: string;\r\n  public score: number;\r\n  public createDate: string;\r\n\r\n}\r\n","module.exports = \"<mat-card class=\\\"mb-20\\\">\\r\\n    <mat-card-header>\\r\\n      <b>Question {{ count }} :</b> What is the definition of &nbsp; <b style=\\\"color:blue\\\">{{ tag }}</b> &nbsp;?\\r\\n    </mat-card-header>\\r\\n    <mat-card-content>\\r\\n      <mat-radio-group class=\\\"example-radio-group\\\" required >\\r\\n        <mat-radio-button class=\\\"example-radio-group\\\" (change)=\\\"Change(answerone)\\\" [value]=\\\"answerone\\\"> {{ answerone }} </mat-radio-button>\\r\\n        <mat-radio-button class=\\\"example-radio-group\\\" (change)=\\\"Change(answertwo)\\\" [value]=\\\"answertwo\\\"> {{ answertwo }} </mat-radio-button>\\r\\n        <mat-radio-button class=\\\"example-radio-group\\\" (change)=\\\"Change(answerthree)\\\" [value]=\\\"answerthree\\\">\\r\\n          {{ answerthree }}\\r\\n        </mat-radio-button>\\r\\n        <mat-radio-button class=\\\"example-radio-group\\\" (change)=\\\"Change(answerfour)\\\" [value]=\\\"answerfour\\\">\\r\\n          {{ answerfour }}\\r\\n        </mat-radio-button>\\r\\n        <br />\\r\\n      </mat-radio-group>\\r\\n    </mat-card-content>\\r\\n</mat-card>\\r\\n\\r\\n\"","module.exports = \".example-radio-group {\\n  display: inline-flex;\\n  flex-direction: column; }\\n\\n.example-radio-button {\\n  margin: 5px; }\\n\\n.example-selected-value {\\n  margin: 15px 0; }\\n\\n.mat-card.gray {\\n  background: linear-gradient(60deg, gray, gray); }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL21vZHVsZXMvcXVlc3Rpb24vQzpcXFVzZXJzXFxPd25lclxcRG9jdW1lbnRzXFxHaXRIdWJcXEFuZ3VsYXJXb3JkQXBwbGljYXRpb24vc3JjXFxhcHBcXHNoYXJlZFxcbW9kdWxlc1xccXVlc3Rpb25cXHF1ZXN0aW9uLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usb0JBQW9CO0VBQ3BCLHNCQUFzQixFQUFBOztBQUd4QjtFQUNFLFdBQVcsRUFBQTs7QUFHYjtFQUNFLGNBQWMsRUFBQTs7QUFHaEI7RUFDRSw4Q0FBOEMsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9tb2R1bGVzL3F1ZXN0aW9uL3F1ZXN0aW9uLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtcmFkaW8tZ3JvdXAge1xyXG4gIGRpc3BsYXk6IGlubGluZS1mbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbn1cclxuXHJcbi5leGFtcGxlLXJhZGlvLWJ1dHRvbiB7XHJcbiAgbWFyZ2luOiA1cHg7XHJcbn1cclxuXHJcbi5leGFtcGxlLXNlbGVjdGVkLXZhbHVlIHtcclxuICBtYXJnaW46IDE1cHggMDtcclxufVxyXG5cclxuLm1hdC1jYXJkLmdyYXkge1xyXG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCg2MGRlZywgZ3JheSwgZ3JheSk7XHJcbn1cclxuIl19 */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ExamComponent } from 'src/app/layout/exam/exam.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-question',\r\n  templateUrl: './question.component.html',\r\n  styleUrls: ['./question.component.scss']\r\n})\r\nexport class QuestionComponent implements OnInit {\r\n  @Input() count: number;\r\n  @Input() tag: string;\r\n  @Input() answerone: string;\r\n  @Input() answertwo: string;\r\n  @Input() answerthree: string;\r\n  @Input() answerfour: string;\r\n  constructor(private examcomponent: ExamComponent) {\r\n\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  Change(ques: string) {\r\n     this.examcomponent.values[this.count - 1] = ques;\r\n  }\r\n\r\n  Save(): void {}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { QuestionComponent } from './question.component';\r\nimport { MatCardModule,MatRadioModule } from '@angular/material';\r\nimport { MatGridListModule, MatIconModule } from '@angular/material';\r\n\r\n@NgModule({\r\n    imports: [CommonModule, MatCardModule, MatGridListModule, MatIconModule,MatRadioModule],\r\n    declarations: [QuestionComponent],\r\n    exports: [QuestionComponent]\r\n})\r\nexport class QuestionModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { Observable, of } from 'rxjs';\r\nimport swal from 'sweetalert2';\r\nimport { Questions } from '../Model/Questions';\r\nimport { Global } from '../Model/Global';\r\nimport { Exam, ExamView } from '../Model/Exam';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InsertScoreService {\r\n\r\n  header = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': 'Bearer ' +  localStorage.getItem('token')\r\n    })\r\n  };\r\n\r\n\r\n  constructor(private http: HttpClient, private toastr: ToastrService) { }\r\n\r\n  InsertScore(exam: Exam): Observable<Exam> {\r\n\r\n\r\n    return this.http\r\n      .post<Exam>(Global.BaseUri + 'exam/addexam', exam, this.header)\r\n      .pipe(catchError(this.handleError<Exam>('InsertScore')));\r\n\r\n\r\n  }\r\n\r\n  private log(message: string) {\r\n    this.toastr.error('Error add score');\r\n\r\n  }\r\n\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      console.error(error); // log to console instead\r\n      this.log(`${error.statusText}`);\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { Observable, of } from 'rxjs';\r\nimport swal from 'sweetalert2';\r\nimport { Questions } from '../Model/Questions';\r\nimport { Global } from '../Model/Global';\r\nimport { Exam, ExamView } from '../Model/Exam';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class QuestionsService {\r\n\r\n  header = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': 'Bearer ' +  localStorage.getItem('token')\r\n    })\r\n  };\r\n\r\n  constructor(private http: HttpClient, private toastr: ToastrService) { }\r\n\r\n  getQuestionsList(): Observable<Questions[]> {\r\n    return this.http.get<Questions[]>(Global.BaseUri + 'question/getquestions', this.header).\r\n    pipe(catchError(this.handleError('GetQuestion', [])));\r\n  }\r\n\r\n  private log(message: string) {\r\n    this.toastr.error('Error get question data.Wordlist must be bigger than 10');\r\n\r\n  }\r\n\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      console.error(error); // log to console instead\r\n      this.log(`${error.statusText}`);\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}