{"version":3,"sources":["webpack:///./src/app/layout/dashboard/dashboard-routing.module.ts","webpack:///./src/app/layout/dashboard/dashboard.component.html","webpack:///./src/app/layout/dashboard/dashboard.component.scss","webpack:///./src/app/layout/dashboard/dashboard.component.ts","webpack:///./src/app/layout/dashboard/dashboard.module.ts"],"names":[],"mappings":"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","file":"dashboard-dashboard-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { DashboardComponent } from './dashboard.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: DashboardComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class DashboardRoutingModule {}\r\n","module.exports = \"<ngx-spinner></ngx-spinner>\\r\\n<div class=\\\"mb-20\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxFlex fxLayoutGap=\\\"20px\\\">\\r\\n  <div fxFlex><app-stat [bgClass]=\\\"'danger'\\\" [icon]=\\\"'dashboard'\\\" count=\\\"{{value_one}}\\\" label=\\\"{{label_one}}\\\"></app-stat></div>\\r\\n  <div fxFlex><app-stat [bgClass]=\\\"'warn'\\\" [icon]=\\\"'dashboard'\\\" count=\\\"{{value_two}}\\\" label=\\\"{{label_two}}\\\"></app-stat></div>\\r\\n  <div fxFlex><app-stat [bgClass]=\\\"'success'\\\" [icon]=\\\"'dashboard'\\\" count=\\\"{{value_three}}\\\" label=\\\"{{label_three}}\\\"></app-stat></div>\\r\\n  <div fxFlex><app-stat [bgClass]=\\\"'info'\\\" [icon]=\\\"'dashboard'\\\" count=\\\"{{value_four}}\\\" label=\\\"{{label_four}}\\\"></app-stat></div>\\r\\n  <div fxFlex><app-stat [bgClass]=\\\"'purple'\\\" [icon]=\\\"'dashboard'\\\" count=\\\"{{value_five}}\\\" label=\\\"{{label_five}}\\\"></app-stat></div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"mb-20\\\" flFlex flexLayout=\\\"row\\\" flexLayout.lt-md=\\\"column\\\">\\r\\n  <div fxFlex>\\r\\n    <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n      <ng-container matColumnDef=\\\"word\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>Word</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">{{ element.word }}</td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"description\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>Description</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">{{ element.description }}</td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"sampleSentences\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>Sentences</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">{{ element.sampleSentences }}</td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"type\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>Word Type</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">{{ element.type }}</td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"result\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>Result</th>\\r\\n        <td mat-cell>\\r\\n          \\r\\n        </td>\\r\\n      </ng-container>\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></tr>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-card {\\n  text-align: center; }\\n\\n.mat-card img {\\n    border-radius: 5px;\\n    margin-top: -25px; }\\n\\n.mat-table {\\n  box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12); }\\n\\n.mb-20 {\\n  margin-bottom: 20px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2Rhc2hib2FyZC9DOlxcVXNlcnNcXE93bmVyXFxEb2N1bWVudHNcXEdpdEh1YlxcQW5ndWxhcldvcmRMaXN0QXBwL3NyY1xcYXBwXFxsYXlvdXRcXGRhc2hib2FyZFxcZGFzaGJvYXJkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBVyxFQUFBOztBQUVmO0VBQ0ksa0JBQWtCLEVBQUE7O0FBRHRCO0lBR1Esa0JBQWtCO0lBQ2xCLGlCQUFpQixFQUFBOztBQUd6QjtFQUNJLCtHQUNtQyxFQUFBOztBQUd2QztFQUNJLG1CQUFtQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvbGF5b3V0L2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG4ubWF0LWNhcmQge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgaW1nIHtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogLTI1cHg7XHJcbiAgICB9XHJcbn1cclxuLm1hdC10YWJsZSB7XHJcbiAgICBib3gtc2hhZG93OiAwIDNweCAxcHggLTJweCByZ2JhKDAsIDAsIDAsIDAuMiksIDAgMnB4IDJweCAwIHJnYmEoMCwgMCwgMCwgMC4xNCksXHJcbiAgICAgICAgMCAxcHggNXB4IDAgcmdiYSgwLCAwLCAwLCAwLjEyKTtcclxufVxyXG5cclxuLm1iLTIwIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material';\r\nimport { ChartService } from 'src/app/shared/services/chart.service';\r\nimport { Chart } from 'src/app/shared/Model/Chart';\r\nimport { WordView } from 'src/app/shared/Model/WordView';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { GetWordViewListService } from 'src/app/shared/services/get-word-view-list.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  ELEMENT_DATA: WordView[] = [];\r\n  displayedColumns = ['word', 'description', 'sampleSentences', 'type'];\r\n  dataSource: any;\r\n  places: Array<any> = [];\r\n  value_one: number;\r\n  label_one: string;\r\n  value_two: number;\r\n  label_two: string;\r\n  value_three: number;\r\n  label_three: string;\r\n  value_four: number;\r\n  label_four: string;\r\n  value_five: number;\r\n  label_five: string;\r\n  Data: Chart[] = [];\r\n  Labels: string[] = [];\r\n  Counts: number[] = [];\r\n  applyFilter(filterValue: string) {\r\n    filterValue = filterValue.trim(); // Remove whitespace\r\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\r\n    this.dataSource.filter = filterValue;\r\n  }\r\n\r\n  constructor(private _chartService: ChartService, private wordService: GetWordViewListService, private spinner: NgxSpinnerService) {\r\n    this.SetValueDashbord();\r\n  }\r\n\r\n  SetViewData() {\r\n    this.wordService\r\n      .getWordViewList('7')\r\n      .toPromise()\r\n      .then(res => {\r\n        this.ELEMENT_DATA = res.slice(0, 7);\r\n        this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  SetValueDashbord() {\r\n    this._chartService\r\n      .getChartData()\r\n      .toPromise()\r\n      .then(res => {\r\n        this.Data = res;\r\n        console.log(res);\r\n        this.Values();\r\n      });\r\n  }\r\n\r\n  Values() {\r\n    this.Labels = this.Data['labels'];\r\n    this.Counts = this.Data['data'];\r\n    // Label set operation\r\n    this.label_one = this.Labels[0];\r\n    this.label_two = this.Labels[1];\r\n    this.label_three = this.Labels[2];\r\n    this.label_four = this.Labels[3];\r\n    this.label_five = this.Labels[4];\r\n\r\n    // Value set operation\r\n    this.value_one = this.Counts[0];\r\n    this.value_two = this.Counts[1];\r\n    this.value_three = this.Counts[2];\r\n    this.value_four = this.Counts[3];\r\n    this.value_five = this.Counts[4];\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.spinner.show();\r\n    this.SetViewData();\r\n  }\r\n\r\n\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatButtonModule, MatCardModule, MatIconModule, MatTableModule } from '@angular/material';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { QuestionModule  } from '../../shared/modules/question/question.module';\r\nimport { StatModule } from '../../shared/modules/stat/stat.module';\r\nimport { DashboardRoutingModule } from './dashboard-routing.module';\r\nimport { DashboardComponent } from './dashboard.component';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        NgxSpinnerModule,\r\n        DashboardRoutingModule,\r\n        MatGridListModule,\r\n        StatModule,\r\n        QuestionModule,\r\n        MatCardModule,\r\n        MatCardModule,\r\n        MatTableModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        FlexLayoutModule.withConfig({addFlexToParent: false})\r\n    ],\r\n    declarations: [DashboardComponent]\r\n})\r\nexport class DashboardModule {}\r\n"],"sourceRoot":""}