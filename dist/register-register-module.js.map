{"version":3,"sources":["webpack:///./src/app/register/register-routing.module.ts","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.scss","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/register/register.module.ts","webpack:///./src/app/shared/services/insert-user.service.ts"],"names":[],"mappings":"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","file":"register-register-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { RegisterComponent } from './register.component';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: RegisterComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class RegisterRoutingModule {}\r\n","module.exports = \"<ngx-spinner></ngx-spinner>\\r\\n<div class=\\\"register-page\\\">\\r\\n  <div class=\\\"content\\\">\\r\\n    <form class=\\\"register-form\\\" [formGroup]='RegisterForm' (ngSubmit)='onSubmit()' >\\r\\n      <div class=\\\"text-center\\\">\\r\\n        <h2 class=\\\"app-name\\\">NEW USER</h2>\\r\\n      </div>\\r\\n      <div fxFlex fxlayout=\\\"row\\\" fxlayout.lt-md=\\\"column\\\">\\r\\n        <div fxFlexFill>\\r\\n          <mat-form-field class=\\\"w-100\\\">\\r\\n            <input matInput placeholder=\\\"Name\\\" formControlName=\\\"Name\\\"  />\\r\\n           \\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div fxFlex fxlayout=\\\"row\\\" fxlayout.lt-md=\\\"column\\\">\\r\\n        <div fxFlexFill>\\r\\n          <mat-form-field class=\\\"w-100\\\">\\r\\n            <input matInput placeholder=\\\"Surname\\\" formControlName=\\\"Surname\\\" />\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div fxFlex fxlayout=\\\"row\\\" fxlayout.lt-md=\\\"column\\\">\\r\\n        <div fxFlexFill>\\r\\n          <mat-form-field class=\\\"w-100\\\">\\r\\n            <input matInput placeholder=\\\"Username is minimum 6 character\\\" formControlName=\\\"Username\\\" />\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div fxFlex fxlayout=\\\"row\\\" fxlayout.lt-md=\\\"column\\\">\\r\\n        <div fxFlexFill>\\r\\n          <mat-form-field class=\\\"w-100\\\">\\r\\n            <input matInput type=\\\"email\\\" placeholder=\\\"Email\\\" formControlName=\\\"Email\\\" />\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div fxFlex fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\">\\r\\n        <div fxFlexFill>\\r\\n          <mat-form-field class=\\\"w-100\\\">\\r\\n            <input matInput type=\\\"password\\\" placeholder=\\\"Password\\\" formControlName=\\\"Password\\\" />\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div fxFlex fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\">\\r\\n        <div fxFlexFill>\\r\\n          <button mat-raised-button color=\\\"primary\\\" class=\\\"w-100\\\">SAVE</button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <hr/>\\r\\n      <div fxFlex fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\">\\r\\n        <div fxFlexFill>\\r\\n        \\r\\n            <a mat-list-item   [routerLink]=\\\"['/login']\\\">\\r\\n                <mat-icon class=\\\"sidenav-icon\\\">touch_app</mat-icon> Login\\r\\n            </a>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".register-page {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  height: 100%;\\n  position: relative; }\\n  .register-page .content {\\n    z-index: 1;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center; }\\n  .register-page .content .app-name {\\n      margin-top: 0px;\\n      padding-bottom: 10px;\\n      font-size: 32px; }\\n  .register-page .content .register-form {\\n      padding: 40px;\\n      background: #fff;\\n      width: 500px;\\n      box-shadow: 0 0 10px #ddd; }\\n  .register-page .content .register-form input:-webkit-autofill {\\n        -webkit-box-shadow: 0 0 0 30px white inset; }\\n  .register-page:after {\\n    content: '';\\n    background: #fff;\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    bottom: 50%;\\n    right: 0; }\\n  .register-page:before {\\n    content: '';\\n    background: #3f51b5;\\n    position: absolute;\\n    top: 50%;\\n    left: 0;\\n    bottom: 0;\\n    right: 0; }\\n  .text-center {\\n  text-align: center; }\\n  .w-100 {\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVnaXN0ZXIvQzpcXFVzZXJzXFxPd25lclxcRG9jdW1lbnRzXFxHaXRIdWJcXEFuZ3VsYXJXb3JkTGlzdEFwcC9zcmNcXGFwcFxccmVnaXN0ZXJcXHJlZ2lzdGVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBYTtFQUNiLG1CQUFtQjtFQUNuQix1QkFBdUI7RUFDdkIsWUFBWTtFQUNaLGtCQUFrQixFQUFBO0VBTHRCO0lBT1EsVUFBVTtJQUNWLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsdUJBQXVCLEVBQUE7RUFWL0I7TUFZWSxlQUFlO01BQ2Ysb0JBQW9CO01BQ3BCLGVBQWUsRUFBQTtFQWQzQjtNQWlCWSxhQUFhO01BQ2IsZ0JBQWdCO01BQ2hCLFlBQVk7TUFDWix5QkFBeUIsRUFBQTtFQXBCckM7UUFzQmdCLDBDQUEwQyxFQUFBO0VBdEIxRDtJQTRCUSxXQUFXO0lBQ1gsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtJQUNsQixNQUFNO0lBQ04sT0FBTztJQUNQLFdBQVc7SUFDWCxRQUFRLEVBQUE7RUFsQ2hCO0lBcUNRLFdBQVc7SUFDWCxtQkFBbUI7SUFDbkIsa0JBQWtCO0lBQ2xCLFFBQVE7SUFDUixPQUFPO0lBQ1AsU0FBUztJQUNULFFBQVEsRUFBQTtFQUdoQjtFQUNJLGtCQUFrQixFQUFBO0VBRXRCO0VBQ0ksV0FBVyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucmVnaXN0ZXItcGFnZSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgLmNvbnRlbnQge1xyXG4gICAgICAgIHotaW5kZXg6IDE7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgIC5hcHAtbmFtZSB7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDBweDtcclxuICAgICAgICAgICAgcGFkZGluZy1ib3R0b206IDEwcHg7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMzJweDtcclxuICAgICAgICB9XHJcbiAgICAgICAgLnJlZ2lzdGVyLWZvcm0ge1xyXG4gICAgICAgICAgICBwYWRkaW5nOiA0MHB4O1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmO1xyXG4gICAgICAgICAgICB3aWR0aDogNTAwcHg7XHJcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IDAgMCAxMHB4ICNkZGQ7XHJcbiAgICAgICAgICAgIGlucHV0Oi13ZWJraXQtYXV0b2ZpbGwge1xyXG4gICAgICAgICAgICAgICAgLXdlYmtpdC1ib3gtc2hhZG93OiAwIDAgMCAzMHB4IHdoaXRlIGluc2V0O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICY6YWZ0ZXIge1xyXG4gICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgIGJhY2tncm91bmQ6ICNmZmY7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogMDtcclxuICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgIGJvdHRvbTogNTAlO1xyXG4gICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgfVxyXG4gICAgJjpiZWZvcmUge1xyXG4gICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgIGJhY2tncm91bmQ6ICMzZjUxYjU7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogNTAlO1xyXG4gICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgfVxyXG59XHJcbi50ZXh0LWNlbnRlciB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuLnctMTAwIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { InsertUserService } from '../shared/services/insert-user.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  RegisterForm: FormGroup;\r\n  user: any;\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private inserUser:InsertUserService,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.RegisterForm = this.formBuilder.group({\r\n      Name: ['', Validators.required],\r\n      Surname: ['', Validators.required],\r\n      Username: ['', [Validators.required, Validators.minLength(6)]],\r\n      Email: ['', Validators.email],\r\n      Password: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.RegisterForm.invalid) {\r\n      return;\r\n    }\r\n    this.spinner.show();\r\n    this.inserUser\r\n      .AddUser(this.RegisterForm.value)\r\n      .toPromise()\r\n      .then(res => {\r\n        this.user = res;\r\n        this.spinner.hide();\r\n        this.Success();\r\n      });\r\n  }\r\n\r\n  Success() {\r\n    if (this.user !== undefined) {\r\n      this.toastr.success('User added succesfully');\r\n      // tslint:disable-next-line:no-unused-expression\r\n      this.router.navigate(['/login']);\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatButtonModule, MatCheckboxModule, MatInputModule, MatIconModule } from '@angular/material';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RegisterRoutingModule } from './register-routing.module';\r\nimport { RegisterComponent } from './register.component';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        RegisterRoutingModule,\r\n        NgxSpinnerModule,\r\n        MatIconModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatInputModule,\r\n        MatCheckboxModule,\r\n        MatButtonModule,\r\n        FlexLayoutModule.withConfig({addFlexToParent: false})\r\n    ],\r\n    declarations: [RegisterComponent]\r\n})\r\nexport class RegisterModule {}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { Observable, of } from 'rxjs';\r\nimport { User } from '../Model/User';\r\nimport swal from 'sweetalert2';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Global } from '../Model/Global';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InsertUserService {\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    })\r\n  };\r\n  constructor(private http: HttpClient, private toastrService: ToastrService) {\r\n\r\n\r\n  }\r\n\r\n  AddUser(user: any): Observable<User> {\r\n    const body = new URLSearchParams();\r\n    body.set('Name', user.Name);\r\n    body.set('Surname', user.Surname);\r\n    body.set('Username', user.Username);\r\n    body.set('Password', user.Password);\r\n    body.set('IsActive', 'true');\r\n    body.set('Email', user.Email);\r\n\r\n    return this.http\r\n      .post<User>(Global.BaseUri + 'AddUser', body.toString(), this.httpOptions)\r\n      .pipe(catchError(this.handleError<User>('AddUser')));\r\n  }\r\n\r\n  private log(message: string) {\r\n\r\n    this.toastrService.error('Error insert user');\r\n  }\r\n\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      console.error(error); // log to console instead\r\n      this.log(`${operation} failed: ${error.message}`);\r\n      return of(result as T);\r\n    };\r\n  }\r\n}\r\n"],"sourceRoot":""}