{"version":3,"sources":["webpack:///./src/app/layout/exam/exam-routing.module.ts","webpack:///./src/app/layout/exam/exam.module.ts","webpack:///./src/app/layout/exam/examlist/examlist.component.html","webpack:///./src/app/layout/exam/examlist/examlist.component.scss","webpack:///./src/app/layout/exam/examlist/examlist.component.ts","webpack:///./src/app/shared/services/getexamlist.service.ts"],"names":[],"mappings":"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","file":"exam-exam-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { ExamComponent } from './exam.component';\r\nimport { ExamlistComponent } from './examlist/examlist.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'examlist',\r\n        component: ExamlistComponent\r\n    },\r\n    {\r\n        path: '',\r\n        component: ExamComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class ExamRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatButtonModule, MatCardModule, MatIconModule, MatTableModule } from '@angular/material';\r\nimport { StatModule } from '../../shared/modules/stat/stat.module';\r\nimport { ExamRoutingModule } from './exam-routing.module';\r\nimport { ExamComponent } from './exam.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  MatBottomSheetModule,\r\n  MatDialogModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatOptionModule,\r\n  MatPaginatorModule,\r\n  MatProgressBarModule,\r\n  MatRadioModule,\r\n  MatSelectModule,\r\n  MatSliderModule,\r\n  MatSnackBarModule,\r\n  MatTooltipModule\r\n} from '@angular/material';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { QuestionModule  } from '../../shared/modules/question/question.module';\r\nimport { ExamlistComponent } from './examlist/examlist.component';\r\n\r\n@NgModule({\r\n  declarations: [ExamComponent, ExamlistComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    NgxSpinnerModule,\r\n    MatDialogModule,\r\n    ExamRoutingModule,\r\n    StatModule,\r\n    MatCardModule,\r\n    MatCardModule,\r\n    QuestionModule,\r\n    MatTableModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatOptionModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatSliderModule,\r\n    MatSnackBarModule,\r\n    MatTooltipModule,\r\n    MatBottomSheetModule,\r\n    FlexLayoutModule.withConfig({ addFlexToParent: false })\r\n  ]\r\n})\r\nexport class ExamModule {}\r\n","module.exports = \"<h4>EXAMLIST</h4><hr/>\\r\\n<div class=\\\"mb-20\\\" flFlex flexLayout=\\\"row\\\" flexLayout.lt-md=\\\"column\\\">\\r\\n\\r\\n    <div fxFlex>\\r\\n      <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n        <ng-container matColumnDef=\\\"UserName\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>User Name</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{ element.UserName }}</td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"Score\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>Score</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{ element.Score }}</td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"CreateDate\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>Create Date</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{ element.CreateDate }}</td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"Result\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>Result</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n              <img *ngIf=\\\"element.Score>70\\\"  src='https://res.cloudinary.com/dukp6c7f7/image/upload/f_auto,fl_lossy,q_auto/s3-ghost/2017/12/Screen_Recording_2017_12_21_at_09_03_PM-1513915448694.gif' width=\\\"35px\\\" height='35px' >\\r\\n              <img *ngIf=\\\"element.Score<70\\\"  src='http://mcdesesteys.com/wp-content/uploads/2015/12/attention.gif' width=\\\"35px\\\" height='35px' >\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></tr>\\r\\n      </table>\\r\\n    </div>\\r\\n  </div>\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-card {\\n  text-align: center; }\\n\\n.mat-card img {\\n    border-radius: 5px;\\n    margin-top: -25px; }\\n\\n.mat-table {\\n  box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12); }\\n\\n.mb-20 {\\n  margin-bottom: 20px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2V4YW0vZXhhbWxpc3QvQzpcXFVzZXJzXFxPd25lclxcRG9jdW1lbnRzXFxHaXRIdWJcXEFuZ3VsYXJXb3JkTGlzdEFwcC9zcmNcXGFwcFxcbGF5b3V0XFxleGFtXFxleGFtbGlzdFxcZXhhbWxpc3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxXQUFXLEVBQUE7O0FBRWY7RUFDSSxrQkFBa0IsRUFBQTs7QUFEdEI7SUFHUSxrQkFBa0I7SUFDbEIsaUJBQWlCLEVBQUE7O0FBR3pCO0VBQ0ksK0dBQ21DLEVBQUE7O0FBR3ZDO0VBQ0ksbUJBQW1CLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9sYXlvdXQvZXhhbS9leGFtbGlzdC9leGFtbGlzdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcbi5tYXQtY2FyZCB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBpbWcge1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgICAgICBtYXJnaW4tdG9wOiAtMjVweDtcclxuICAgIH1cclxufVxyXG4ubWF0LXRhYmxlIHtcclxuICAgIGJveC1zaGFkb3c6IDAgM3B4IDFweCAtMnB4IHJnYmEoMCwgMCwgMCwgMC4yKSwgMCAycHggMnB4IDAgcmdiYSgwLCAwLCAwLCAwLjE0KSxcclxuICAgICAgICAwIDFweCA1cHggMCByZ2JhKDAsIDAsIDAsIDAuMTIpO1xyXG59XHJcblxyXG4ubWItMjAge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { WordService } from 'src/app/shared/services/word.service';\r\nimport { MatTableDataSource } from '@angular/material';\r\nimport { ExamView } from 'src/app/shared/Model/Exam';\r\nimport { QuestionsService } from 'src/app/shared/services/questions.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { GetexamlistService } from 'src/app/shared/services/getexamlist.service';\r\n\r\n@Component({\r\n  selector: 'app-examlist',\r\n  templateUrl: './examlist.component.html',\r\n  styleUrls: ['./examlist.component.scss']\r\n})\r\nexport class ExamlistComponent implements OnInit {\r\n  ELEMENT_DATA: ExamView[] = [];\r\n  displayedColumns = ['UserName', 'Score', 'CreateDate', 'Result'];\r\n  dataSource: any;\r\n  constructor(private questionservice: GetexamlistService) {}\r\n\r\n  ngOnInit() {\r\n\r\n    this.GetData();\r\n  }\r\n\r\n  GetData() {\r\n    this.questionservice\r\n      .getExamList()\r\n      .toPromise()\r\n      .then(res => {\r\n        this.ELEMENT_DATA = res;\r\n        this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      });\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    filterValue = filterValue.trim(); // Remove whitespace\r\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\r\n    this.dataSource.filter = filterValue;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { Observable, of } from 'rxjs';\r\nimport swal from 'sweetalert2';\r\nimport { Questions } from '../Model/Questions';\r\nimport { Global } from '../Model/Global';\r\nimport { Exam, ExamView } from '../Model/Exam';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GetexamlistService {\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    })\r\n  };\r\n\r\n\r\n  constructor(private http: HttpClient, private toastr: ToastrService) { }\r\n\r\n  getExamList(): Observable<ExamView[]> {\r\n    return this.http.get<ExamView[]>(Global.BaseUri + 'GetExam/GetList', {\r\n      params: {\r\n        userId:  localStorage.getItem('userid'),\r\n      }\r\n    }).pipe(catchError(this.handleError('getExamList', [])));\r\n\r\n  }\r\n\r\n\r\n  private log(message: string) {\r\n    this.toastr.error('Error get exam list.');\r\n\r\n  }\r\n\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      console.error(error); // log to console instead\r\n      this.log(`${error.statusText}`);\r\n      return of(result as T);\r\n    };\r\n  }\r\n}\r\n"],"sourceRoot":""}